#!/bin/sh

realpath () {
(
  TARGET_FILE="$1"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" = "." -o "$TARGET_FILE" = ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  echo "$(pwd -P)/$TARGET_FILE"
)
}

# Allow user and template_declares (see below) to add java options.
addJava () {
  java_opts="$java_opts $1"
}

# Allow user to specify java options. These get listed first per bash-template.
if [ -n "$JAVA_OPTS" ]
then
  addJava "$JAVA_OPTS"
fi

# Loads a configuration file full of default command line options for this script.
loadConfigFile() {
  cat "$1" | sed '/^\#/d' | sed 's/^-J-X/-X/' | tr '\r\n' ' '
}


real_script_path="$(realpath "$0")"
app_home="$(realpath "$(dirname "$real_script_path")")"
lib_dir="$(realpath "${app_home}/../lib")"

app_mainclass=play.core.server.ProdServerStart

script_conf_file="${app_home}/../conf/application.ini"
app_classpath="$lib_dir/../conf/:$lib_dir/com.snipper.serviceb-1.0-SNAPSHOT-sans-externalized.jar:$lib_dir/org.scala-lang.scala-library-2.12.3.jar:$lib_dir/com.typesafe.play.twirl-api_2.12-1.3.12.jar:$lib_dir/org.scala-lang.modules.scala-xml_2.12-1.0.6.jar:$lib_dir/com.typesafe.play.play-server_2.12-2.6.10.jar:$lib_dir/com.typesafe.play.play_2.12-2.6.10.jar:$lib_dir/com.typesafe.play.build-link-2.6.10.jar:$lib_dir/com.typesafe.play.play-exceptions-2.6.10.jar:$lib_dir/com.typesafe.play.play-netty-utils-2.6.10.jar:$lib_dir/org.slf4j.slf4j-api-1.7.25.jar:$lib_dir/org.slf4j.jul-to-slf4j-1.7.25.jar:$lib_dir/org.slf4j.jcl-over-slf4j-1.7.25.jar:$lib_dir/com.typesafe.play.play-streams_2.12-2.6.10.jar:$lib_dir/org.reactivestreams.reactive-streams-1.0.1.jar:$lib_dir/com.typesafe.akka.akka-stream_2.12-2.5.8.jar:$lib_dir/com.typesafe.akka.akka-actor_2.12-2.5.8.jar:$lib_dir/com.typesafe.config-1.3.2.jar:$lib_dir/org.scala-lang.modules.scala-java8-compat_2.12-0.8.0.jar:$lib_dir/com.typesafe.ssl-config-core_2.12-0.2.2.jar:$lib_dir/org.scala-lang.modules.scala-parser-combinators_2.12-1.0.6.jar:$lib_dir/com.typesafe.akka.akka-slf4j_2.12-2.5.8.jar:$lib_dir/com.fasterxml.jackson.core.jackson-core-2.8.10.jar:$lib_dir/com.fasterxml.jackson.core.jackson-annotations-2.8.10.jar:$lib_dir/com.fasterxml.jackson.core.jackson-databind-2.8.10.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-jdk8-2.8.10.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-jsr310-2.8.10.jar:$lib_dir/commons-codec.commons-codec-1.10.jar:$lib_dir/com.typesafe.play.play-json_2.12-2.6.8.jar:$lib_dir/com.typesafe.play.play-functional_2.12-2.6.8.jar:$lib_dir/org.scala-lang.scala-reflect-2.12.3.jar:$lib_dir/org.typelevel.macro-compat_2.12-1.1.1.jar:$lib_dir/joda-time.joda-time-2.9.9.jar:$lib_dir/com.google.guava.guava-22.0.jar:$lib_dir/com.google.code.findbugs.jsr305-1.3.9.jar:$lib_dir/com.google.errorprone.error_prone_annotations-2.0.18.jar:$lib_dir/com.google.j2objc.j2objc-annotations-1.1.jar:$lib_dir/org.codehaus.mojo.animal-sniffer-annotations-1.14.jar:$lib_dir/io.jsonwebtoken.jjwt-0.7.0.jar:$lib_dir/org.apache.commons.commons-lang3-3.6.jar:$lib_dir/javax.transaction.jta-1.1.jar:$lib_dir/javax.inject.javax.inject-1.jar:$lib_dir/com.typesafe.play.filters-helpers_2.12-2.6.10.jar:$lib_dir/com.typesafe.play.play-logback_2.12-2.6.10.jar:$lib_dir/ch.qos.logback.logback-classic-1.2.3.jar:$lib_dir/ch.qos.logback.logback-core-1.2.3.jar:$lib_dir/com.typesafe.play.play-akka-http-server_2.12-2.6.10.jar:$lib_dir/com.typesafe.akka.akka-http-core_2.12-10.0.11.jar:$lib_dir/com.typesafe.akka.akka-parsing_2.12-10.0.11.jar:$lib_dir/com.typesafe.play.play-guice_2.12-2.6.10.jar:$lib_dir/com.google.inject.guice-4.1.0.jar:$lib_dir/aopalliance.aopalliance-1.0.jar:$lib_dir/com.google.inject.extensions.guice-assistedinject-4.1.0.jar:$lib_dir/com.snipper.serviceb-1.0-SNAPSHOT-assets.jar"

addJava "-Duser.dir=$(realpath "$(cd "${app_home}/.."; pwd -P)"  $(is_cygwin && echo "fix"))"


# If a configuration file exist, read the contents to $opts
[ -f "$script_conf_file" ] && opts=$(loadConfigFile "$script_conf_file")

exec java $java_opts -classpath $app_classpath $opts $app_mainclass $@
